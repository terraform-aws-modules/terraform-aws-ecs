[0m[1mmodule.ecs_task_definition.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.ecs_task_definition.module.container_definition["al2023"].data.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.ecs_task_definition.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.task_exec_assume[0]: Reading...[0m[0m
[0m[1mmodule.ecs_task_definition.data.aws_iam_policy_document.task_exec_assume[0]: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.ecs_task_definition.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.ecs_task_definition.data.aws_region.current: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.ecs_task_definition.module.container_definition["al2023"].data.aws_region.current: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.ecs_service.data.aws_region.current: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.ecs_task_definition.data.aws_iam_policy_document.task_exec_assume[0]: Read complete after 0s [id=2291109037][0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.task_exec_assume[0]: Read complete after 0s [id=2291109037][0m
[0m[1mmodule.alb.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_ssm_parameter.fluentbit: Reading...[0m[0m
[0m[1mmodule.ecs_task_definition.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.alb.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.task_exec[0]: Reading...[0m[0m
[0m[1mmodule.ecs_task_definition.data.aws_iam_policy_document.task_exec[0]: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.tasks[0]: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.task_exec[0]: Read complete after 0s [id=1415633931][0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.tasks[0]: Read complete after 0s [id=757765849][0m
[0m[1mmodule.ecs_task_definition.data.aws_iam_policy_document.task_exec[0]: Read complete after 0s [id=1415633931][0m
[0m[1mmodule.ecs_service.data.aws_caller_identity.current: Read complete after 0s [id=611312193357][0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.tasks_assume[0]: Reading...[0m[0m
[0m[1mmodule.ecs_service.data.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=1712848646][0m
[0m[1mmodule.ecs_task_definition.data.aws_caller_identity.current: Read complete after 0s [id=611312193357][0m
[0m[1mmodule.ecs_task_definition.data.aws_iam_policy_document.tasks_assume[0]: Reading...[0m[0m
[0m[1mmodule.ecs_task_definition.data.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=1712848646][0m
[0m[1mdata.aws_ssm_parameter.fluentbit: Read complete after 0s [id=/aws/service/aws-for-fluent-bit/stable][0m
[0m[1mmodule.ecs_service.module.container_definition["ecsdemo-frontend"].data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.ecs_service.module.container_definition["fluent-bit"].data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.ecs_service.module.container_definition["fluent-bit"].data.aws_region.current: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.ecs_service.module.container_definition["ecsdemo-frontend"].data.aws_region.current: Read complete after 0s [id=eu-west-1][0m
[0m[1mdata.aws_availability_zones.available: Read complete after 0s [id=eu-west-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # aws_service_discovery_http_namespace.this[0m will be created
[0m  [32m+[0m[0m resource "aws_service_discovery_http_namespace" "this" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "CloudMap namespace for ex-fargate"
      [32m+[0m[0m http_name   = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ex-fargate"
      [32m+[0m[0m tags        = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1m  # module.alb.aws_lb.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "this" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m client_keep_alive                                            = 3600
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = true
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enable_zonal_shift                                           = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = (known after apply)
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = "ex-fargate"
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = (known after apply)
      [32m+[0m[0m tags                                                         = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m tags_all                                                     = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)

      [32m+[0m[0m subnet_mapping (known after apply)

      [32m+[0m[0m timeouts {}
    }

[1m  # module.alb.aws_lb_listener.this["ex_http"][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "this" {
      [32m+[0m[0m arn                                                                   = (known after apply)
      [32m+[0m[0m id                                                                    = (known after apply)
      [32m+[0m[0m load_balancer_arn                                                     = (known after apply)
      [32m+[0m[0m port                                                                  = 80
      [32m+[0m[0m protocol                                                              = "HTTP"
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_header_name               = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_issuer_header_name        = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_leaf_header_name          = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_serial_number_header_name = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_subject_header_name       = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_validity_header_name      = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_cipher_suite_header_name              = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_version_header_name                   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_credentials_header_value   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_headers_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_methods_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_origin_header_value        = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_expose_headers_header_value      = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_max_age_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_content_security_policy_header_value            = (known after apply)
      [32m+[0m[0m routing_http_response_server_enabled                                  = (known after apply)
      [32m+[0m[0m routing_http_response_strict_transport_security_header_value          = (known after apply)
      [32m+[0m[0m routing_http_response_x_content_type_options_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_x_frame_options_header_value                    = (known after apply)
      [32m+[0m[0m ssl_policy                                                            = (known after apply)
      [32m+[0m[0m tags                                                                  = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m tags_all                                                              = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m tcp_idle_timeout_seconds                                              = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }

      [32m+[0m[0m mutual_authentication (known after apply)
    }

[1m  # module.alb.aws_lb_target_group.this["ex_ecs"][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "this" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "5"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = "true"
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m target_type                        = "ip"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 5
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = "200"
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "traffic-port"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 5
          [32m+[0m[0m unhealthy_threshold = 2
        }

      [32m+[0m[0m stickiness (known after apply)

      [32m+[0m[0m target_failover (known after apply)

      [32m+[0m[0m target_group_health (known after apply)

      [32m+[0m[0m target_health_state (known after apply)
    }

[1m  # module.alb.aws_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for ex-fargate application load balancer"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "ex-fargate-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.alb.aws_vpc_security_group_egress_rule.this["all"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "10.0.0.0/16"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
    }

[1m  # module.alb.aws_vpc_security_group_ingress_rule.this["all_http"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 80
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"               = "ex-fargate"
          [32m+[0m[0m "Name"                  = "ex-fargate"
          [32m+[0m[0m "Repository"            = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
        }
      [32m+[0m[0m to_port                = 80
    }

[1m  # module.ecs_cluster.aws_cloudwatch_log_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "this" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/ecs/ex-fargate"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 90
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1m  # module.ecs_cluster.aws_ecs_cluster.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_cluster" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m name     = "ex-fargate"
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }

      [32m+[0m[0m configuration {
          [32m+[0m[0m execute_command_configuration {
              [32m+[0m[0m logging = "DEFAULT"
            }
        }

      [32m+[0m[0m setting {
          [32m+[0m[0m name  = "containerInsights"
          [32m+[0m[0m value = "enabled"
        }
    }

[1m  # module.ecs_cluster.aws_ecs_cluster_capacity_providers.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_cluster_capacity_providers" "this" {
      [32m+[0m[0m capacity_providers = [
          [32m+[0m[0m "FARGATE",
          [32m+[0m[0m "FARGATE_SPOT",
        ]
      [32m+[0m[0m cluster_name       = "ex-fargate"
      [32m+[0m[0m id                 = (known after apply)

      [32m+[0m[0m default_capacity_provider_strategy {
          [32m+[0m[0m base              = 0
          [32m+[0m[0m capacity_provider = "FARGATE_SPOT"
          [32m+[0m[0m weight            = 50
        }
      [32m+[0m[0m default_capacity_provider_strategy {
          [32m+[0m[0m base              = 20
          [32m+[0m[0m capacity_provider = "FARGATE"
          [32m+[0m[0m weight            = 50
        }
    }

[1m  # module.ecs_service.data.aws_ecs_task_definition.this[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_ecs_task_definition" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = (known after apply)
      [32m+[0m[0m cpu                      = (known after apply)
      [32m+[0m[0m enable_fault_injection   = (known after apply)
      [32m+[0m[0m ephemeral_storage        = (known after apply)
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m inference_accelerator    = (known after apply)
      [32m+[0m[0m ipc_mode                 = (known after apply)
      [32m+[0m[0m memory                   = (known after apply)
      [32m+[0m[0m network_mode             = (known after apply)
      [32m+[0m[0m pid_mode                 = (known after apply)
      [32m+[0m[0m placement_constraints    = (known after apply)
      [32m+[0m[0m proxy_configuration      = (known after apply)
      [32m+[0m[0m requires_compatibilities = (known after apply)
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m runtime_platform         = (known after apply)
      [32m+[0m[0m status                   = (known after apply)
      [32m+[0m[0m task_definition          = "ex-fargate"
      [32m+[0m[0m task_role_arn            = (known after apply)
      [32m+[0m[0m volume                   = (known after apply)
    }

[1m  # module.ecs_service.data.aws_subnet.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_subnet" "this" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = (known after apply)
      [32m+[0m[0m availability_zone                              = (known after apply)
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m available_ip_address_count                     = (known after apply)
      [32m+[0m[0m cidr_block                                     = (known after apply)
      [32m+[0m[0m customer_owned_ipv4_pool                       = (known after apply)
      [32m+[0m[0m default_for_az                                 = (known after apply)
      [32m+[0m[0m enable_dns64                                   = (known after apply)
      [32m+[0m[0m enable_lni_at_device_index                     = (known after apply)
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = (known after apply)
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                                = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = (known after apply)
      [32m+[0m[0m map_customer_owned_ip_on_launch                = (known after apply)
      [32m+[0m[0m map_public_ip_on_launch                        = (known after apply)
      [32m+[0m[0m outpost_arn                                    = (known after apply)
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m state                                          = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.ecs_service.aws_appautoscaling_policy.this["cpu"][0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_policy" "this" {
      [32m+[0m[0m alarm_arns         = (known after apply)
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "cpu"
      [32m+[0m[0m policy_type        = "TargetTrackingScaling"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"

      [32m+[0m[0m target_tracking_scaling_policy_configuration {
          [32m+[0m[0m disable_scale_in   = false
          [32m+[0m[0m scale_in_cooldown  = 300
          [32m+[0m[0m scale_out_cooldown = 60
          [32m+[0m[0m target_value       = 75

          [32m+[0m[0m predefined_metric_specification {
              [32m+[0m[0m predefined_metric_type = "ECSServiceAverageCPUUtilization"
            }
        }
    }

[1m  # module.ecs_service.aws_appautoscaling_policy.this["memory"][0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_policy" "this" {
      [32m+[0m[0m alarm_arns         = (known after apply)
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "memory"
      [32m+[0m[0m policy_type        = "TargetTrackingScaling"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"

      [32m+[0m[0m target_tracking_scaling_policy_configuration {
          [32m+[0m[0m disable_scale_in   = false
          [32m+[0m[0m scale_in_cooldown  = 300
          [32m+[0m[0m scale_out_cooldown = 60
          [32m+[0m[0m target_value       = 75

          [32m+[0m[0m predefined_metric_specification {
              [32m+[0m[0m predefined_metric_type = "ECSServiceAverageMemoryUtilization"
            }
        }
    }

[1m  # module.ecs_service.aws_appautoscaling_target.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_target" "this" {
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m max_capacity       = 10
      [32m+[0m[0m min_capacity       = 1
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m role_arn           = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"
      [32m+[0m[0m tags               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }

      [32m+[0m[0m suspended_state (known after apply)
    }

[1m  # module.ecs_service.aws_ecs_service.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "this" {
      [32m+[0m[0m availability_zone_rebalancing      = "DISABLED"
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 66
      [32m+[0m[0m desired_count                      = 1
      [32m+[0m[0m enable_ecs_managed_tags            = true
      [32m+[0m[0m enable_execute_command             = true
      [32m+[0m[0m force_new_deployment               = true
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "ex-fargate"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "ServiceTag" = "Tag on service level"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
          [32m+[0m[0m "ServiceTag" = "Tag on service level"
        }
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "ecsdemo-frontend"
          [32m+[0m[0m container_port   = 3000
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = false
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = (known after apply)
        }

      [32m+[0m[0m service_connect_configuration {
          [32m+[0m[0m enabled   = true
          [32m+[0m[0m namespace = (known after apply)

          [32m+[0m[0m service {
              [32m+[0m[0m discovery_name = "ecsdemo-frontend"
              [32m+[0m[0m port_name      = "ecsdemo-frontend"

              [32m+[0m[0m client_alias {
                  [32m+[0m[0m dns_name = "ecsdemo-frontend"
                  [32m+[0m[0m port     = 3000
                }

              [32m+[0m[0m timeout {
                  [32m+[0m[0m idle_timeout_seconds        = 300
                  [32m+[0m[0m per_request_timeout_seconds = 300
                }
            }
        }

      [32m+[0m[0m timeouts {}
    }

[1m  # module.ecs_service.aws_ecs_task_definition.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m cpu                    = 512
                  [32m+[0m[0m dependsOn              = [
                      [32m+[0m[0m {
                          [32m+[0m[0m condition     = "START"
                          [32m+[0m[0m containerName = "fluent-bit"
                        },
                    ]
                  [32m+[0m[0m environment            = []
                  [32m+[0m[0m essential              = true
                  [32m+[0m[0m image                  = "public.ecr.aws/aws-containers/ecsdemo-frontend:776fd50"
                  [32m+[0m[0m interactive            = false
                  [32m+[0m[0m linuxParameters        = {
                      [32m+[0m[0m capabilities       = {
                          [32m+[0m[0m add  = []
                          [32m+[0m[0m drop = [
                              [32m+[0m[0m "NET_RAW",
                            ]
                        }
                      [32m+[0m[0m initProcessEnabled = true
                    }
                  [32m+[0m[0m logConfiguration       = {
                      [32m+[0m[0m logDriver = "awsfirelens"
                      [32m+[0m[0m options   = {
                          [32m+[0m[0m Name                    = "firehose"
                          [32m+[0m[0m delivery_stream         = "my-stream"
                          [32m+[0m[0m log-driver-buffer-limit = "2097152"
                          [32m+[0m[0m region                  = "eu-west-1"
                        }
                    }
                  [32m+[0m[0m memory                 = 1024
                  [32m+[0m[0m memoryReservation      = 100
                  [32m+[0m[0m mountPoints            = []
                  [32m+[0m[0m name                   = "ecsdemo-frontend"
                  [32m+[0m[0m portMappings           = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 3000
                          [32m+[0m[0m hostPort      = 3000
                          [32m+[0m[0m name          = "ecsdemo-frontend"
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                  [32m+[0m[0m privileged             = false
                  [32m+[0m[0m pseudoTerminal         = false
                  [32m+[0m[0m readonlyRootFilesystem = false
                  [32m+[0m[0m startTimeout           = 30
                  [32m+[0m[0m stopTimeout            = 120
                  [32m+[0m[0m systemControls         = []
                  [32m+[0m[0m user                   = "0"
                  [32m+[0m[0m volumesFrom            = [
                      [32m+[0m[0m {
                          [32m+[0m[0m readOnly        = false
                          [32m+[0m[0m sourceContainer = "fluent-bit"
                        },
                    ]
                },
              [32m+[0m[0m {
                  [32m+[0m[0m cpu                    = 512
                  [32m+[0m[0m environment            = []
                  [32m+[0m[0m essential              = true
                  [32m+[0m[0m firelensConfiguration  = {
                      [32m+[0m[0m type = "fluentbit"
                    }
                  [32m+[0m[0m image                  = "906394416424.dkr.ecr.eu-west-1.amazonaws.com/aws-for-fluent-bit:2.32.5.20250422"
                  [32m+[0m[0m interactive            = false
                  [32m+[0m[0m linuxParameters        = {
                      [32m+[0m[0m initProcessEnabled = true
                    }
                  [32m+[0m[0m logConfiguration       = {
                      [32m+[0m[0m logDriver = "awslogs"
                      [32m+[0m[0m options   = {
                          [32m+[0m[0m awslogs-group         = "/aws/ecs/ex-fargate/fluent-bit"
                          [32m+[0m[0m awslogs-region        = "eu-west-1"
                          [32m+[0m[0m awslogs-stream-prefix = "ecs"
                        }
                    }
                  [32m+[0m[0m memory                 = 1024
                  [32m+[0m[0m memoryReservation      = 50
                  [32m+[0m[0m mountPoints            = []
                  [32m+[0m[0m name                   = "fluent-bit"
                  [32m+[0m[0m portMappings           = []
                  [32m+[0m[0m privileged             = false
                  [32m+[0m[0m pseudoTerminal         = false
                  [32m+[0m[0m readonlyRootFilesystem = true
                  [32m+[0m[0m startTimeout           = 30
                  [32m+[0m[0m stopTimeout            = 120
                  [32m+[0m[0m systemControls         = []
                  [32m+[0m[0m user                   = "0"
                  [32m+[0m[0m volumesFrom            = []
                },
            ]
        )
      [32m+[0m[0m cpu                      = "1024"
      [32m+[0m[0m enable_fault_injection   = (known after apply)
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "ex-fargate"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "4096"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags                     = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                 = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m task_role_arn            = (known after apply)
      [32m+[0m[0m track_latest             = false

      [32m+[0m[0m runtime_platform {
          [32m+[0m[0m cpu_architecture        = "X86_64"
          [32m+[0m[0m operating_system_family = "LINUX"
        }
    }

[1m  # module.ecs_service.aws_iam_policy.task_exec[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "task_exec" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m description      = "Task execution role IAM policy"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = (known after apply)
      [32m+[0m[0m name_prefix      = "ex-fargate-"
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "logs:PutLogEvents",
                          [32m+[0m[0m "logs:CreateLogStream",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                      [32m+[0m[0m Sid      = "Logs"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "ecr:GetDownloadUrlForLayer",
                          [32m+[0m[0m "ecr:GetAuthorizationToken",
                          [32m+[0m[0m "ecr:BatchGetImage",
                          [32m+[0m[0m "ecr:BatchCheckLayerAvailability",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                      [32m+[0m[0m Sid      = "ECR"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = "ssm:GetParameters"
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:ssm:*:*:parameter/*"
                      [32m+[0m[0m Sid      = "GetSSMParams"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = "secretsmanager:GetSecretValue"
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:secretsmanager:*:*:secret:*"
                      [32m+[0m[0m Sid      = "GetSecrets"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1m  # module.ecs_service.aws_iam_role.task_exec[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "task_exec" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "ECSTaskExecutionAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m description           = "Task execution role for ex-fargate"
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = "ex-fargate-"
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.ecs_service.aws_iam_role.tasks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "tasks" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m ArnLike      = {
                              [32m+[0m[0m "aws:SourceArn" = "arn:aws:ecs:eu-west-1:611312193357:*"
                            }
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:SourceAccount" = "611312193357"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "ECSTasksAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = "ex-fargate-"
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.ecs_service.aws_iam_role_policy.tasks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "tasks" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = "ex-fargate-"
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "ssmmessages:OpenDataChannel",
                          [32m+[0m[0m "ssmmessages:OpenControlChannel",
                          [32m+[0m[0m "ssmmessages:CreateDataChannel",
                          [32m+[0m[0m "ssmmessages:CreateControlChannel",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                      [32m+[0m[0m Sid      = "ECSExec"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.ecs_service.aws_iam_role_policy_attachment.task_exec[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "task_exec" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.ecs_service.aws_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "ex-fargate-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.ecs_service.aws_security_group_rule.this["alb_ingress_3000"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "this" {
      [32m+[0m[0m description              = "Service port"
      [32m+[0m[0m from_port                = 3000
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 3000
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.ecs_service.aws_security_group_rule.this["egress_all"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "this" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.ecs_task_definition.data.aws_ecs_task_definition.this[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_ecs_task_definition" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = (known after apply)
      [32m+[0m[0m cpu                      = (known after apply)
      [32m+[0m[0m enable_fault_injection   = (known after apply)
      [32m+[0m[0m ephemeral_storage        = (known after apply)
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m inference_accelerator    = (known after apply)
      [32m+[0m[0m ipc_mode                 = (known after apply)
      [32m+[0m[0m memory                   = (known after apply)
      [32m+[0m[0m network_mode             = (known after apply)
      [32m+[0m[0m pid_mode                 = (known after apply)
      [32m+[0m[0m placement_constraints    = (known after apply)
      [32m+[0m[0m proxy_configuration      = (known after apply)
      [32m+[0m[0m requires_compatibilities = (known after apply)
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m runtime_platform         = (known after apply)
      [32m+[0m[0m status                   = (known after apply)
      [32m+[0m[0m task_definition          = "ex-fargate-standalone"
      [32m+[0m[0m task_role_arn            = (known after apply)
      [32m+[0m[0m volume                   = (known after apply)
    }

[1m  # module.ecs_task_definition.data.aws_subnet.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_subnet" "this" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = (known after apply)
      [32m+[0m[0m availability_zone                              = (known after apply)
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m available_ip_address_count                     = (known after apply)
      [32m+[0m[0m cidr_block                                     = (known after apply)
      [32m+[0m[0m customer_owned_ipv4_pool                       = (known after apply)
      [32m+[0m[0m default_for_az                                 = (known after apply)
      [32m+[0m[0m enable_dns64                                   = (known after apply)
      [32m+[0m[0m enable_lni_at_device_index                     = (known after apply)
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = (known after apply)
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                                = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = (known after apply)
      [32m+[0m[0m map_customer_owned_ip_on_launch                = (known after apply)
      [32m+[0m[0m map_public_ip_on_launch                        = (known after apply)
      [32m+[0m[0m outpost_arn                                    = (known after apply)
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m state                                          = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.ecs_task_definition.aws_ecs_task_definition.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m command                = [
                      [32m+[0m[0m "echo hello world",
                    ]
                  [32m+[0m[0m entryPoint             = [
                      [32m+[0m[0m "/usr/bin/sh",
                      [32m+[0m[0m "-c",
                    ]
                  [32m+[0m[0m environment            = []
                  [32m+[0m[0m image                  = "public.ecr.aws/amazonlinux/amazonlinux:2023-minimal"
                  [32m+[0m[0m interactive            = false
                  [32m+[0m[0m linuxParameters        = {
                      [32m+[0m[0m initProcessEnabled = false
                    }
                  [32m+[0m[0m logConfiguration       = {
                      [32m+[0m[0m logDriver = "awslogs"
                      [32m+[0m[0m options   = {
                          [32m+[0m[0m awslogs-group         = "/aws/ecs/ex-fargate-standalone/al2023"
                          [32m+[0m[0m awslogs-region        = "eu-west-1"
                          [32m+[0m[0m awslogs-stream-prefix = "ecs"
                        }
                    }
                  [32m+[0m[0m mountPoints            = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPath = "/var/www/ex-vol"
                          [32m+[0m[0m sourceVolume  = "ex-vol"
                        },
                    ]
                  [32m+[0m[0m name                   = "al2023"
                  [32m+[0m[0m portMappings           = []
                  [32m+[0m[0m privileged             = false
                  [32m+[0m[0m pseudoTerminal         = false
                  [32m+[0m[0m readonlyRootFilesystem = true
                  [32m+[0m[0m startTimeout           = 30
                  [32m+[0m[0m stopTimeout            = 120
                  [32m+[0m[0m systemControls         = []
                  [32m+[0m[0m user                   = "0"
                  [32m+[0m[0m volumesFrom            = []
                },
            ]
        )
      [32m+[0m[0m cpu                      = "1024"
      [32m+[0m[0m enable_fault_injection   = (known after apply)
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "ex-fargate-standalone"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "2048"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags                     = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                 = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m task_role_arn            = (known after apply)
      [32m+[0m[0m track_latest             = false

      [32m+[0m[0m runtime_platform {
          [32m+[0m[0m cpu_architecture        = "ARM64"
          [32m+[0m[0m operating_system_family = "LINUX"
        }

      [32m+[0m[0m volume {
          [32m+[0m[0m configure_at_launch = (known after apply)
          [32m+[0m[0m name                = "ex-vol"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.ecs_task_definition.aws_iam_policy.task_exec[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "task_exec" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m description      = "Task execution role IAM policy"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = (known after apply)
      [32m+[0m[0m name_prefix      = "ex-fargate-standalone-"
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "logs:PutLogEvents",
                          [32m+[0m[0m "logs:CreateLogStream",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                      [32m+[0m[0m Sid      = "Logs"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "ecr:GetDownloadUrlForLayer",
                          [32m+[0m[0m "ecr:GetAuthorizationToken",
                          [32m+[0m[0m "ecr:BatchGetImage",
                          [32m+[0m[0m "ecr:BatchCheckLayerAvailability",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                      [32m+[0m[0m Sid      = "ECR"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = "ssm:GetParameters"
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:ssm:*:*:parameter/*"
                      [32m+[0m[0m Sid      = "GetSSMParams"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = "secretsmanager:GetSecretValue"
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:secretsmanager:*:*:secret:*"
                      [32m+[0m[0m Sid      = "GetSecrets"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1m  # module.ecs_task_definition.aws_iam_role.task_exec[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "task_exec" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "ECSTaskExecutionAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m description           = "Task execution role for ex-fargate-standalone"
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = "ex-fargate-standalone-"
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.ecs_task_definition.aws_iam_role.tasks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "tasks" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m ArnLike      = {
                              [32m+[0m[0m "aws:SourceArn" = "arn:aws:ecs:eu-west-1:611312193357:*"
                            }
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:SourceAccount" = "611312193357"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "ECSTasksAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = "ex-fargate-standalone-"
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.ecs_task_definition.aws_iam_role_policy_attachment.task_exec[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "task_exec" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.ecs_task_definition.aws_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "ex-fargate-standalone-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate-standalone"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate-standalone"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.ecs_task_definition.aws_security_group_rule.this["egress_all"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "this" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.vpc.aws_default_network_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_network_acl" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_network_acl_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.vpc.aws_default_route_table.default[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_route_table" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_route_table_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m route                  = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
          [32m+[0m[0m update = "5m"
        }
    }

[1m  # module.vpc.aws_default_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc.aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.vpc.aws_internet_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc.aws_nat_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "this" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1m  # module.vpc.aws_route.private_nat_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc.aws_route.public_internet_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc.aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.0.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.16.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.32.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.48.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.49.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.50.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1m  # module.ecs_service.module.container_definition["fluent-bit"].aws_cloudwatch_log_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "this" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/ecs/ex-fargate/fluent-bit"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 14
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1m  # module.ecs_task_definition.module.container_definition["al2023"].aws_cloudwatch_log_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "this" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/ecs/ex-fargate-standalone/al2023"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 14
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Example"    = "ex-fargate"
          [32m+[0m[0m "Name"       = "ex-fargate"
          [32m+[0m[0m "Repository" = "https://github.com/terraform-aws-modules/terraform-aws-ecs"
        }
    }

[1mPlan:[0m 55 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m cluster_arn                             = (known after apply)
  [32m+[0m[0m cluster_autoscaling_capacity_providers  = {}
  [32m+[0m[0m cluster_capacity_providers              = (known after apply)
  [32m+[0m[0m cluster_id                              = (known after apply)
  [32m+[0m[0m cluster_name                            = "ex-fargate"
  [32m+[0m[0m service_autoscaling_policies            = {
      [32m+[0m[0m cpu    = {
          [32m+[0m[0m alarm_arns                                   = (known after apply)
          [32m+[0m[0m arn                                          = (known after apply)
          [32m+[0m[0m id                                           = (known after apply)
          [32m+[0m[0m name                                         = "cpu"
          [32m+[0m[0m policy_type                                  = "TargetTrackingScaling"
          [32m+[0m[0m resource_id                                  = (known after apply)
          [32m+[0m[0m scalable_dimension                           = "ecs:service:DesiredCount"
          [32m+[0m[0m service_namespace                            = "ecs"
          [32m+[0m[0m step_scaling_policy_configuration            = []
          [32m+[0m[0m target_tracking_scaling_policy_configuration = [
              [32m+[0m[0m {
                  [32m+[0m[0m customized_metric_specification = []
                  [32m+[0m[0m disable_scale_in                = false
                  [32m+[0m[0m predefined_metric_specification = [
                      [32m+[0m[0m {
                          [32m+[0m[0m predefined_metric_type = "ECSServiceAverageCPUUtilization"
                          [32m+[0m[0m resource_label         = [90mnull[0m[0m
                        },
                    ]
                  [32m+[0m[0m scale_in_cooldown               = 300
                  [32m+[0m[0m scale_out_cooldown              = 60
                  [32m+[0m[0m target_value                    = 75
                },
            ]
        }
      [32m+[0m[0m memory = {
          [32m+[0m[0m alarm_arns                                   = (known after apply)
          [32m+[0m[0m arn                                          = (known after apply)
          [32m+[0m[0m id                                           = (known after apply)
          [32m+[0m[0m name                                         = "memory"
          [32m+[0m[0m policy_type                                  = "TargetTrackingScaling"
          [32m+[0m[0m resource_id                                  = (known after apply)
          [32m+[0m[0m scalable_dimension                           = "ecs:service:DesiredCount"
          [32m+[0m[0m service_namespace                            = "ecs"
          [32m+[0m[0m step_scaling_policy_configuration            = []
          [32m+[0m[0m target_tracking_scaling_policy_configuration = [
              [32m+[0m[0m {
                  [32m+[0m[0m customized_metric_specification = []
                  [32m+[0m[0m disable_scale_in                = false
                  [32m+[0m[0m predefined_metric_specification = [
                      [32m+[0m[0m {
                          [32m+[0m[0m predefined_metric_type = "ECSServiceAverageMemoryUtilization"
                          [32m+[0m[0m resource_label         = [90mnull[0m[0m
                        },
                    ]
                  [32m+[0m[0m scale_in_cooldown               = 300
                  [32m+[0m[0m scale_out_cooldown              = 60
                  [32m+[0m[0m target_value                    = 75
                },
            ]
        }
    }
  [32m+[0m[0m service_autoscaling_scheduled_actions   = {}
  [32m+[0m[0m service_container_definitions           = {
      [32m+[0m[0m ecsdemo-frontend = {
          [32m+[0m[0m cloudwatch_log_group_arn  = [90mnull[0m[0m
          [32m+[0m[0m cloudwatch_log_group_name = [90mnull[0m[0m
          [32m+[0m[0m container_definition      = {
              [32m+[0m[0m cpu                    = 512
              [32m+[0m[0m dependsOn              = [
                  [32m+[0m[0m {
                      [32m+[0m[0m condition     = "START"
                      [32m+[0m[0m containerName = "fluent-bit"
                    },
                ]
              [32m+[0m[0m environment            = []
              [32m+[0m[0m essential              = true
              [32m+[0m[0m image                  = "public.ecr.aws/aws-containers/ecsdemo-frontend:776fd50"
              [32m+[0m[0m interactive            = false
              [32m+[0m[0m linuxParameters        = {
                  [32m+[0m[0m capabilities       = {
                      [32m+[0m[0m add  = []
                      [32m+[0m[0m drop = [
                          [32m+[0m[0m "NET_RAW",
                        ]
                    }
                  [32m+[0m[0m initProcessEnabled = true
                }
              [32m+[0m[0m logConfiguration       = {
                  [32m+[0m[0m logDriver = "awsfirelens"
                  [32m+[0m[0m options   = {
                      [32m+[0m[0m Name                    = "firehose"
                      [32m+[0m[0m delivery_stream         = "my-stream"
                      [32m+[0m[0m log-driver-buffer-limit = "2097152"
                      [32m+[0m[0m region                  = "eu-west-1"
                    }
                }
              [32m+[0m[0m memory                 = 1024
              [32m+[0m[0m memoryReservation      = 100
              [32m+[0m[0m mountPoints            = []
              [32m+[0m[0m name                   = "ecsdemo-frontend"
              [32m+[0m[0m portMappings           = [
                  [32m+[0m[0m {
                      [32m+[0m[0m containerPort = 3000
                      [32m+[0m[0m hostPort      = 3000
                      [32m+[0m[0m name          = "ecsdemo-frontend"
                      [32m+[0m[0m protocol      = "tcp"
                    },
                ]
              [32m+[0m[0m privileged             = false
              [32m+[0m[0m pseudoTerminal         = false
              [32m+[0m[0m readonlyRootFilesystem = false
              [32m+[0m[0m startTimeout           = 30
              [32m+[0m[0m stopTimeout            = 120
              [32m+[0m[0m systemControls         = []
              [32m+[0m[0m user                   = "0"
              [32m+[0m[0m volumesFrom            = [
                  [32m+[0m[0m {
                      [32m+[0m[0m readOnly        = false
                      [32m+[0m[0m sourceContainer = "fluent-bit"
                    },
                ]
            }
        }
      [32m+[0m[0m fluent-bit       = {
          [32m+[0m[0m cloudwatch_log_group_arn  = (known after apply)
          [32m+[0m[0m cloudwatch_log_group_name = "/aws/ecs/ex-fargate/fluent-bit"
          [32m+[0m[0m container_definition      = {
              [32m+[0m[0m cpu                    = 512
              [32m+[0m[0m environment            = []
              [32m+[0m[0m essential              = true
              [32m+[0m[0m firelensConfiguration  = {
                  [32m+[0m[0m type = "fluentbit"
                }
              [32m+[0m[0m image                  = "906394416424.dkr.ecr.eu-west-1.amazonaws.com/aws-for-fluent-bit:2.32.5.20250422"
              [32m+[0m[0m interactive            = false
              [32m+[0m[0m linuxParameters        = {
                  [32m+[0m[0m initProcessEnabled = true
                }
              [32m+[0m[0m logConfiguration       = {
                  [32m+[0m[0m logDriver = "awslogs"
                  [32m+[0m[0m options   = {
                      [32m+[0m[0m awslogs-group         = "/aws/ecs/ex-fargate/fluent-bit"
                      [32m+[0m[0m awslogs-region        = "eu-west-1"
                      [32m+[0m[0m awslogs-stream-prefix = "ecs"
                    }
                }
              [32m+[0m[0m memory                 = 1024
              [32m+[0m[0m memoryReservation      = 50
              [32m+[0m[0m mountPoints            = []
              [32m+[0m[0m name                   = "fluent-bit"
              [32m+[0m[0m portMappings           = []
              [32m+[0m[0m privileged             = false
              [32m+[0m[0m pseudoTerminal         = false
              [32m+[0m[0m readonlyRootFilesystem = true
              [32m+[0m[0m startTimeout           = 30
              [32m+[0m[0m stopTimeout            = 120
              [32m+[0m[0m systemControls         = []
              [32m+[0m[0m user                   = "0"
              [32m+[0m[0m volumesFrom            = []
            }
        }
    }
  [32m+[0m[0m service_id                              = (known after apply)
  [32m+[0m[0m service_name                            = "ex-fargate"
  [32m+[0m[0m service_security_group_arn              = (known after apply)
  [32m+[0m[0m service_security_group_id               = (known after apply)
  [32m+[0m[0m service_task_definition_arn             = (known after apply)
  [32m+[0m[0m service_task_definition_family          = "ex-fargate"
  [32m+[0m[0m service_task_definition_family_revision = (known after apply)
  [32m+[0m[0m service_task_definition_revision        = (known after apply)
  [32m+[0m[0m service_task_exec_iam_role_arn          = (known after apply)
  [32m+[0m[0m service_task_exec_iam_role_name         = (known after apply)
  [32m+[0m[0m service_task_exec_iam_role_unique_id    = (known after apply)
  [32m+[0m[0m service_tasks_iam_role_arn              = (known after apply)
  [32m+[0m[0m service_tasks_iam_role_name             = (known after apply)
  [32m+[0m[0m service_tasks_iam_role_unique_id        = (known after apply)
  [32m+[0m[0m task_definition_run_task_command        = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
